<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo博客搭建过程</title>
    <url>/2022/11/18/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="Hexo博客搭建过程（以及踩过的坑）"><a href="#Hexo博客搭建过程（以及踩过的坑）" class="headerlink" title="Hexo博客搭建过程（以及踩过的坑）"></a>Hexo博客搭建过程（以及踩过的坑）</h1><h2 id="Hexo简单介绍"><a href="#Hexo简单介绍" class="headerlink" title="Hexo简单介绍"></a>Hexo简单介绍</h2><p><a href="https://hexo.io/zh-cn/index.html">Hexo</a>是一个简介快速的博客框架，使用Markdown解析文章，可以直接生成静态网页，通过部署在GitHub或者Gitee上可以实现无服务器搭建个人博客（缺点是搭建之后博客的网站的部署还是比较折腾，而且跨端使用的体验不是很好）。</p>
<span id="more"></span>
<h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><h3 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h3><p>部署Hexo之前要保证已经配置好了<a href="https://git-scm.com/">Git</a>和<a href="https://nodejs.org/en/">Node.js</a>(官网推荐:Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)<br>查看Git和Node.js是否安装好的命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git --version   <span class="comment">#查看git版本命令</span></span><br><span class="line">node -v         <span class="comment">#查看node版本命令</span></span><br></pre></td></tr></table></figure>
<p>若显示结果如下，说明已经安装配置完毕。<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221120213600.png" alt="20221120213600"></p>
<h3 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h3><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>使用npm全局安装Hexo(熟悉Node使用也可局部安装)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>安装完成后，可以使用<code>hexo -v</code>来查看是否安装成功，如果安装成功，终端输出如下：<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221120215351.png" alt="20221120215351"></p>
<h4 id="开始搭建-1"><a href="#开始搭建-1" class="headerlink" title="开始搭建"></a>开始搭建</h4><p>先在本地创建一个文件夹，用来存放博客相关的文件。(博客的内容文件也会存放在这个文件夹中)<br>然后切换至这个文件夹中，之后所有的操作都是在这个文件夹中进行的。<br>初始化博客（之前我在Ubuntu上初始化的博客，使用了<code>sudo hexo init</code>，导致之后的所有操作都需要使用sudo才能完成，最后部署的也有问题，不知道具体是什么原因，所以推荐第一步不使用sudo命令）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p>初始化的过程可能有一点点慢，耐心等一等就好了，因为需要从GitHub上clone文件。<br>安装成功后的提示如下：<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221121001307.png" alt="20221121001307"><br>初始化后的目录结构如下<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221121001024.png" alt="20221121001024"><br>此时已经可以在本地将这个项目启动起来了，执行<code>hexo s</code>就可以在本地的4000端口看到初始的样子了。<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221121001625.png" alt="20221121001625"><br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221121001710.png" alt="20221121001710"></p>
<h4 id="创建第一篇博客"><a href="#创建第一篇博客" class="headerlink" title="创建第一篇博客"></a>创建第一篇博客</h4><p>使用<code>hexo n &quot;博客标题&quot;</code>命令可以创建一篇新的博客，博客的路径为<code>/source/_post/</code><br>写完一篇博客之后，可以使用<code>hexo s</code>在本地启动项目，可以预览网站的样式。</p>
<h4 id="部署GitHub"><a href="#部署GitHub" class="headerlink" title="部署GitHub"></a>部署GitHub</h4><p>要想网站能够通过域名来访问，可以将网站挂载在GitHub下（无需服务器，这是静态网站的一个优点）。下面介绍一下部署在GitHub的方式（至于为什么不是Gitee,因为gitee要开通这个功能还需要实名认证，要审核一天，所以搭建本站的时候就没使用gitee）<br>1.首先要登录GitHub创建一个名字为<code>username.github.io</code>的仓库，注意username是自己GitHub的用户名，命名格式必须是这样，不然后面会出问题，选择仓库为公开。创建过程如图（因为已经创建过了，所以会有一个报错，忽略就行）：<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221121092955.png" alt="20221121092955"><br>创建完之后的界面如下：<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221121093331.png" alt="20221121093331"><br>如果配置过ssh可以选择ssh地址，没配置过选择https就行，保存这个地址。<br>回到博客的目录下，安装<strong>hexo-deployer-git</strong>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>然后打开当前目录下的<code>_config.yml</code>文件,在文件末尾的deploy部分加上如下信息<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221121094338.png" alt="20221121094338"><br>type为部署方式；<br>repo为仓库地址，上文中要保存下来的那个；<br>branch为分支名，一般填main&#x2F;master就行。<br><strong>注意type前面有两个空格，冒号后有一个空格，都不能少</strong><br>修改完<code>_config.yml</code>保存后执行一下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean  <span class="comment">#清除缓存</span></span><br><span class="line">hexo g      <span class="comment">#生成静态网页</span></span><br><span class="line">hexo d      <span class="comment">#部署到远端，这个过程如果是用的https地址会需要输入用户名和密码</span></span><br></pre></td></tr></table></figure>
<p>执行完上述命令就可以通过<code>username.github.io</code>访问到博客网站了。</p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>MouseWithoutBorders无界鼠标使用</title>
    <url>/2022/11/26/MouseWithoutBorders%E6%97%A0%E7%95%8C%E9%BC%A0%E6%A0%87%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="MouseWithoutBorders无界鼠标使用"><a href="#MouseWithoutBorders无界鼠标使用" class="headerlink" title="MouseWithoutBorders无界鼠标使用"></a>MouseWithoutBorders无界鼠标使用</h1><p>因为现在手头上有一台笔记本和一台台式机。台式机是新配的，性能自然是比笔记本强上不少，导致笔记本一直是在吃灰的一个状态，但是又有一些文件都在笔记本上，要在两台电脑上切来切去，操作手感十分的割裂（还新买了一套键鼠，但是依旧很不方便）。有时候要查看一台电脑上的文件信息，然后在另一台电脑上操作，切换过程实在是太过繁琐了。然后无意间看到了微软的无界鼠标这款软件，发现恰好能满足自己的大部分需求，使用体验也非常不错。</p>
<span id="more"></span>
<h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>软件的下载连接<a href="https://www.microsoft.com/en-us/download/details.aspx?id=35460">点击这里</a>。<br>进入官网后，直接点击Download下载。<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221126163733.png" alt="20221126163733"><br>下载后一路next就能安装完毕了。<br>安装完毕后的软件界面如下（没有中文版本，差评）：<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221126163528.png" alt="20221126163528"><br>需要在两台设备上都安装这个软件。</p>
<h2 id="软件配置"><a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h2><p>软件的起始界面中有<strong>yes</strong>和<strong>no</strong>l两个选项。</p>
<ul>
<li><strong>yes</strong>：控制端选择yes，也就是需要共享键盘鼠标的一端</li>
<li><strong>no</strong>：被控制端选择no,最多应该是可以同时连接四台设备<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221126164245.png" alt="20221126164245"></li>
</ul>
<h3 id="控制端配置"><a href="#控制端配置" class="headerlink" title="控制端配置"></a>控制端配置</h3><p>控制端选择<strong>yes</strong>之后，会出现以下界面：<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221126164356.png" alt="20221126164356"><br>有两个输入框，上面为被控制设备的安全码，下面为被控制端的名字。<br>名字的查看方式如下（也可以选择no查看设备名字）：<br><strong>Win10</strong>查看方式：设置→系统→关于<br>设备名称显示的就是设备的名字<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221126170535.png" alt="20221126170535"><br><strong>Win11</strong>查看方式：设置→系统→系统信息<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221126170659.png" alt="20221126170659"><br>而安全码则是在被控制端选择no之后会显示。</p>
<h3 id="被控制端配置"><a href="#被控制端配置" class="headerlink" title="被控制端配置"></a>被控制端配置</h3><p>被控制端选择<strong>no</strong>之后，会出现以下界面：<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221126165444.png" alt="20221126165444"><br>上面为本机的安全码，下面是本机名字。</p>
<h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><p>使用控制端设备输入被控制设备的安全码和名字之后点击link之后就可以完成连接了。<br>直接点击连接可能会由于防火墙的问题,连接失败。搜了一圈也没找到答案，目前测试有效的一个方法是关闭电脑<strong>公用网络</strong>的防火墙，之后就可以正常使用了（还不太清楚有没有什么安全隐患）。<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221126172713.png" alt="20221126172713"></p>
<h2 id="软件使用"><a href="#软件使用" class="headerlink" title="软件使用"></a>软件使用</h2><p>成功连接后，点击<strong>next</strong>之后点击<strong>done</strong>可以看到如下界面：<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221126172855.png" alt="20221126172855"><br><strong>Two Row</strong>可以改变设备的布局，变成2×2的样式。也可以通过拖动电脑图标，改变他们的逻辑位置，和物理位置对应起来比较方便。（通俗的说就是，实际电脑1放在电脑2的左边，可以在改界面拖动电脑2放在电脑右边，这样操作起来比较顺手）<br>拖动之后点击<code>Apply</code>就可以了。</p>
<h2 id="功能简介"><a href="#功能简介" class="headerlink" title="功能简介"></a>功能简介</h2><p>除了可以在多台设备共享一套键鼠之外，还可以共享剪切板的内容以及在设备间传输文件（貌似只支持单个100M以下的文件）。其他功能和配置还在摸索中…</p>
]]></content>
      <categories>
        <category>实用工具</category>
      </categories>
      <tags>
        <tag>实用工具</tag>
        <tag>多端协同</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/11/16/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Ubuntu修改用户密码</title>
    <url>/2022/11/22/ubuntu%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h1 id="Ubuntu修改用户密码"><a href="#Ubuntu修改用户密码" class="headerlink" title="Ubuntu修改用户密码"></a>Ubuntu修改用户密码</h1><p>事情的起因是最近看Games101图形学课程，课后作业给了一个配置好环境的虚拟机镜像，创建了一个用户并配置了用户密码。虽然不影响使用，但是没有root账户的密码总觉得有点不够自在，就找了一下修改root用户密码的方法，顺便修改当前账户的密码（因为密码确实有点长，有点容易打错）。</p>
<span id="more"></span>
<h2 id="root用户密码修改"><a href="#root用户密码修改" class="headerlink" title="root用户密码修改"></a>root用户密码修改</h2><p>使用<code>ctrl+alt+t</code>打开终端，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo passwd</span><br></pre></td></tr></table></figure>
<p>然后输入两次想要设置的密码，这样就成功更新密码了。<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221122223234.png" alt="20221122223234"><br>可以通过<code>su</code>命令测试是否修改成功<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221122223330.png" alt="20221122223330"><br>执行完命令后，成功切换为root用户说明修改成功。</p>
<h2 id="修改指定用户密码"><a href="#修改指定用户密码" class="headerlink" title="修改指定用户密码"></a>修改指定用户密码</h2><p>接下来修改指定用户的密码。<br>在终端中输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo passwd username <span class="comment">#username为要修改密码的用户名</span></span><br></pre></td></tr></table></figure>
<p>之后输入新的密码就完成密码的重置了。<br><img src="https://cdn.jsdelivr.net/gh/xumyuan/image@master/blogs/pictures20221122224346.png" alt="20221122224346"><br>也可以使用<code>su</code>切换到root用户，然后执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd username</span><br></pre></td></tr></table></figure>
<p>效果是一样的。</p>
]]></content>
      <categories>
        <category>Linux学习</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
</search>
